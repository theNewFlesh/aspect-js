{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"App/","text":"App Contains the entire Aspect Vue application","title":"App"},{"location":"Cell/","text":"Cell A cell is a single element of a row of a Table. A cell contains a single widget and has an API for getting widget values, default values and type. Methods on_node_pane_widget_value_update ( : ) : void Available widget types Parameters : Returns void void Properties row : void Cell of table that contains cell column : void Column of table that contains cell Acessors get value ( ) : any Return value of row at column Returns any any get default_value ( ) : any Return default value of cell Returns any any get display ( ) : object Returns display options for cell widget Returns object object get widget ( ) : string Returns the cell's widget class Returns string string get lock ( ) : string Returns the value of the cell's lock property. Locks are related to dataflow. Returns string string get widget_type ( ) : string Returns the cell's widget type Returns string string","title":"Cell"},{"location":"ComboBox/","text":"ComboBox A dropdown box that allows for multiple selections Methods created ( ) : void Creat widget with value if it exists, else use default value Returns void void update_selection ( items : any[] , previous_items : any[] ) : void Update selection and display.options.values with items if they differ from previous_items Parameters items : any[] Item to select previous_items : any[] Previously selected items Returns void void filter ( item : any , query : string ) : boolean Determine whether query matchs item Parameters item : any Item to query query : string Query string Returns boolean boolean Properties value : void Value of component default_value : void Default value of component display : void Display options of component Acessors get items ( ) : object[] Returns Array of objects with value, text and color keys Returns object[] object[] get default_color ( ) : string Returns the default color of the widget Returns string string","title":"ComboBox"},{"location":"DagPane/","text":"DagPane The DagPane class is responsible for rendering a Aspect DAG in a ThreeJS scene Methods created ( ) : void Creates a new DAG component, assigns scene a width and height and updates DAG with scene Returns void void mounted ( ) : void Tells ThreeJS scene to render Returns void void animate ( ) : void Update ThreeJS scene. Called at regular intervals. Returns void void Properties scene : void Scene component dag : void DAG component params : void Scene definition width : void Width of DAG window height : void Height of DAG window","title":"DagPane"},{"location":"DropDown/","text":"DropDown Similar to ComboBox component but only allows 1 item to be selected Methods created ( ) : void Creat widget with value if it exists, else use default value Returns void void update_selection ( ) : void Update selection and display.options.values with item differs from previous_item Parameters Returns void void on_change ( value : any ) : void Event handler for change events Parameters value : any Value of dropdown selection. Returns void void filter ( item : , query : ) : boolean Determine whether query matchs item Parameters item : Item to query query : Query string Returns boolean boolean Properties value : void Value of component default_value : void Default value of component display : void Display options of component selection : void Selected items Acessors get items ( ) : object[] Returns Array of objects with value, text and color keys Returns object[] object[] get default_color ( ) : string Returns the default color of the widget Returns string string","title":"DropDown"},{"location":"Layout/","text":"Layout The Layout component the DagPane and NodePane components Methods created ( ) : void Update DagPane shape Returns void void mounted ( ) : void Set DagPane and NodePane widths Returns void void __update_dag_pane_shape ( ) : void Set width of DagPane Returns void void _get_width ( element : any ) : number Get width of given DOM element Parameters element : any DOM element Returns number number _set_width ( element : any , width : number ) : void Sets width of given element to given width Parameters element : any DOM element width : number Width in vw (percentage) units Returns void void _on_resize_start ( ) : void Event handler for when user begins dragging pane divider. Sets _prev_dag_width to DOM element width Parameters Returns void void _on_resize ( element : any ) : void Event handler for when the user continues dragging the pane divider. Updates the DagPane and NodePane width. Parameters element : any Ignored DOM element Returns void void _on_resize_stop ( : ) : void Event handler for when the user stops dragging the pane divider. Collapses the NodePane if it is beneath threshold Parameters : Returns void void Properties params : void Scene definition _prev_dag_width : void Previous width of the DagPane __dag_pane_width : void Current width of the DagPane __dag_pane_height : void Current height of the DagPane dag_width : void Percentage of window width of the DagPane collapse_width : void Percentage of window Width at which NodePane will collapse Acessors get _data ( ) : any Data for NodePane table Returns any any get _index ( ) : object Index for NodePane table Returns object object","title":"Layout"},{"location":"RangeSlider/","text":"RangeSlider Slider component with two handles, one for the lower bound, one for the upper bound Methods on_change ( value : any ) : void Event handler for change events Parameters value : any Value of dropdown selection. Returns void void Properties value : void Value of component default_value : void Default value of component options : void Default options of component. min: 0 max: 100 step: 1","title":"RangeSlider"},{"location":"Slider/","text":"Slider Methods on_change ( value : number ) : void Event handler for change events Parameters value : number Value of dropdown selection. Returns void void Properties value : void Value of component default_value : void Default value of component display : void Default options of component. color: \"#5F95DE\", options: { min: 0, max: 100, step: 1, tick_step: 10, } Acessors get tick_labels ( ) : number[] Return an Array of numbers and \"\" for v-slider to render as ticks Returns number[] number[]","title":"Slider"},{"location":"SpinBox/","text":"SpinBox Methods round ( ) : void Round value upon change. Currently disabled. Returns void void on_set_value ( event : any ) : void Event handler that sets value given to input's internal value Parameters event : any Ignore event object Returns void void on_increment_value ( ) : void Event handler for the up arrow button press Returns void void on_decrement_value ( ) : void Event handler for the down arrow button press Returns void void on_change ( ) : void Event handler for changes to value. Returns void void Properties value : void Value of component default_value : void Default value of component options : void Component options display : void Display options for component step: 1 round: 3","title":"SpinBox"},{"location":"Table/","text":"Table The Table class recursively wraps the contents of a tabular data structure with a hierarchical index with v-data-tables Methods created ( ) : void Create Index and Scaffold data structures Returns void void print ( ) : void Print content of index and data to console Returns void void in_groups ( : ) : boolean Determines if given key is in groups Parameters : Returns boolean boolean Properties _data : void Internal tabular data structure _index : void Index to internal tabular data structure Acessors get headers ( ) : IHeader[] Headers to be passed to a v-data-table Returns IHeader[] IHeader[] get rows ( ) : void Data rows as grouped by the first header Returns void void get hide_headers ( ) : boolean Whether to display headers of each table Returns boolean boolean get indent ( ) : boolean Whether each successive table is indented Returns boolean boolean get group_column ( ) : string Column upon which the outmost table is grouped Returns string string get groups ( ) : void Returns a lut with the group_column values as its keys Returns void void","title":"Table"},{"location":"TextArea/","text":"TextArea TextArea is a vertically resizing area for typing in text Methods on_change ( value : string ) : void Event handler for change events Parameters value : string Value of dropdown selection. Returns void void Properties value : void Value of component default_value : void Default value of component options : void Options for component display : void Display options for component","title":"TextArea"}]}